@page "/part10"

<PartTemplate Title="@Constants.Part10.Title" PrevHref="@Constants.Part10.PrevHref" Href="@Constants.Part10.Href"
NextHref="@Constants.Part10.NextHref" PageIdentifier="@Constants.Part10.PageIdentifier">
  <Part>
    <p>1. When the Release pipeline has finished and the BlazorDeployment succeeded, open a browser window and navigate
      to the URL of your Blazor Web App</p>
    <pre><code class="language-html">https://[YourAppName]blazor.azurewebsites.net</code></pre>
    <p>2. It's possible you receive error <em>Access to fetch at
        'https://localhost:44324/api/abp/api-definition' from origin 'https://abpioazuredevopsblazor.azurewebsites.net'
        has been blocked by CORS policy</em></p>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/blazor_deployment_succeeded_cors_issue.jpg" />
    </Figure>
    <p>3. Open the <em>appsettings.Staging.json</em> file of the <em>[YourAppName].HttpApi.Host</em> project and add the URL
      (https://[YourAppName]blazor.azurewebsites.net) of the Blazor Web App to the <em>CorsOrigins</em> section</p>
      <Figure Size="FigureSize.None">
      <FigureImage Source="images/appsettings_cors_origins.jpg" />
      </Figure>
    <p>4. Open the <em>appsettings.json</em> file in the <em>wwwwroot</em> folder of the <em>[YourAppName].Blazor</em> project and update the values <em>Authority</em> and <em>BaseUrl</em>
     with the URL of the API Web App (https://[YourAppName]api.azurewebsites.net/)  </p>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/appsettings_blazor_project.jpg" />
    </Figure>
    <p>5. Open a command prompt in the root folder of your project and Add, Commit and Push all your changes to the
      GitHub repository</p>
    <pre><code class="language-html">
git add .
git commit -m CorsSettings
git push
    </code></pre>
    <p>6. Pushing changes to your GitHub repository triggers a new Build. After the Build has finished, a new Release should start</p>
    <p>7. After the Release, navigate to the URL of the Blazor Web App. You should see the index page of your Blazor Web App by now</p>
    <p>8. There is still another issue with the Web App when you click the Log in link to navigate to the login page. (Open the Developers Tools (F12)  to see the error description). You probably receive error <em>Refused to display ... in a frame because it set 'X-Frame-Options' to 'sameorigin'</em></p>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/refused_to_display_in_a_frame_because_it_set_X-Frame_Options_to_sameorigin.jpg" />
    </Figure>
    <p>9. Add the code below in the <em>ConfigureServices</em> method of the <em>Startup.cs</em> file of the <em>[YourAppName].HttpApi.Host</em> project</p>
    <pre><code class="language-html">
services.AddAntiforgery(options =>
{
    options.SuppressXFrameOptionsHeader = true;
});
    </code></pre>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/suppress_xframe_options_header.jpg" />
    </Figure>
    <p>10. Add, Commit and push the changes to your GitHub repository</p>
    <p>11. Wait until the new Build and Release have finished. Navigate to the URL of your Blazor Web App</p>
    <p>12. The previous error <em>Refused to display ... in a frame because it set 'X-Frame-Options' to 'sameorigin'</em> is gone</p>
    <p>13. Now you probably get a <em>500 Error - unauthorized_client</em>. Still some issues with Identity Server?</p>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/unauthorized_client.jpg" />
    </Figure>
    <p>14. Set the <em>RootUrl</em> value in the <em>AbpIoAzureDevops_Blazor</em> section of the <em>appsettings.Staging.json</em> file of the <em>[YourAppName].DbMigrator</em> project to the URL of your Blazor Web App (https://[YourAppName]blazor.azurewebsites.net)</p>
    <p>15. Run the [YourAppName].DbMigrator project to apply the settings</p>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/rooturl_appsettings_dbmigrator_project.jpg" />
    </Figure>
    <p>16. Navigate to the URL of your Blazor Web App and click on the Log in link. The Login page gets loaded</p>
    <p>17. Fill in <em>Username (admin)</em> and <em>Password (1q2w3E*)</em> and click the Login button. Do you receive the error below?</p>
    <Figure Size="FigureSize.None">
      <FigureImage Source="images/there_was_an_error_trying_to_log_you_in.jpg" />
    </Figure>
    <p>18. Open the <em>appsettings.Staging.json</em> file of the <em>[YourAppName].HttpApi.Host</em> project and set the <em>App:SelfUrl</em> and <em>AuthServer:Authority</em> values to <em>https://[YourAppName]api.azurewebsites.net</em></p>
    <p>19. Add, Commit and push the changes to your GitHub repository</p>
    <p>20. Wait until the Build and Release pipelines have finished. Navigate to the URL of your Blazor Web App. Click <b>Login</b></p>
    <p>21. Fill in <em></em> and <em>Password (1q2w3E*)</em> and click the <b>Login</b> button. Congratulations, You successfully logged in!</p>
    <p>22. Try to add a new user, logout and login with the newly created user to see if your ABP Framework application is working correctly</p>
  </Part>
</PartTemplate>