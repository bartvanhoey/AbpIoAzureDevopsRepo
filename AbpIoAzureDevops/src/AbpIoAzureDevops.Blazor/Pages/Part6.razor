@page "/part6"

<PartTemplate Title="@Constants.Part6.Title" PrevHref="@Constants.Part6.PrevHref" Href="@Constants.Part6.Href" NextHref="@Constants.Part6.NextHref" PageIdentifier="@Constants.Part6.PageIdentifier" >
    <Part>
      <p>1. Sign in into <a href="https://azure.microsoft.com/en-us/services/devops/" target="_blank"> Azure DevOps</a></p>
      <p>2. Click on [YourAppName]Proj and click on Releases in the Pipelines menu</p>
      <p>3. Click on the <em>New pipeline</em> button in the <b>No release pipelines found</b> window</p>
      <p>4. Select <em>Azure App Service deployment</em> and click the <b>Apply</b> button </p>
      <p>5. Click + Add an artifact in the Pipeline Tab</p>
      <p>6. Select the Build icon as Source type in the Add an artifact window</p>
      <p>7. Select Build pipeline in the Source (build pipeline) dropdown and click the Add button</p>
      <p>8. Click on the Continuous deployment trigger (thunderbolt icon)</p>
      <p>9. Set the toggle to Enabled in the the Continous deployment trigger window. </p>
      <p>10. Select Include in the Type dropdown. Select your branch in the Build branch dropdown. Close the window </p>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/continuous_deployment_trigger.jpg" />
        <FigureCaption>Continuous deployment trigger settings</FigureCaption>
      </Figure> 
      <p>11. Enter ApiDeployment in Stage name input field. Close the Stage window</p>
      <p>12. Click on the little red circle with the exclamation mark in the Tasks menu</p>
      <p>13. Select your subscription in the Azure subscription dropdown. </p>
      <p>14. Click Authorize and enter your credentials in the next screens</p>
      <p>15. After the Authorisation, select the [YourAppName]API in the App service name dropdown</p>
      <p>16. Click on the Deploy Azure App Service task</p>
      <p>17. Select [YourAppName].HttpApi.Host.zip in the Package or folder input field</p>
     <Figure Size="FigureSize.None">
        <FigureImage Source="images/select_api_zip_in_drop_folder.jpg" />
        <FigureCaption>Select [YourAppName].HttpApi.Host.zip in drop folder</FigureCaption>
      </Figure>
      <p>18. Click on the Save icon in the top menu. Click OK</p>
      <p>19. Click Create release in the top menu. click Create </p>
       <Figure Size="FigureSize.None">
        <FigureImage Source="images/release_apideployment_succeeded.jpg" />
        <FigureCaption>Select [YourAppName].HttpApi.Host.zip in drop folder</FigureCaption>
      </Figure>
      <p>20. Open a browser and navigate to the URL of your Web App</p>
      <pre><code class="language-html">https://[YourAppName]api.azurewebsites.net</code></pre>
      <p>21. It's possible that you receive the error below</p>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/HTTP_Error_500.30_ANCM_In_Process_Start_Failure.jpg" />
        <FigureCaption>HTTP Error 500.30 - ANCM In-Process Start Failure</FigureCaption>
      </Figure>
      <p>22. Open Debug Console in the Kudu window [YourAppNameapi.scm.azurewebsites.net]</p>
      <pre><code class="language-html">https://[YourAppName]api.scm.azurewebsites.net</code></pre>
      <p>23. Check if [YourAppName].HttpApi.Host files have been deployed</p>
      <pre><code class="language-html">dir</code></pre>
      <p>24. Check the dotnet version of your Azure Web App</p>
      <pre><code class="language-html">dotnet --version</code></pre>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/kudu_debug_console_check_dotnet_version.jpg" />
        <FigureCaption>HTTP Error 500.30 - ANCM In-Process Start Failure</FigureCaption>
      </Figure>
      <p>25. Add &lt;AspNetCoreHostingModel&gtOutOfProcess&lt;/AspNetCoreHostingModel&gt; to the [YourAppName].HttpApi.Host.csproj file</p>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/add_AspNetCoreHostingModel_OutOfProcess_csproj.jpg" />
        <FigureCaption>Add &lt;AspNetCoreHostingModel&gtOutOfProcess&lt;/AspNetCoreHostingModel&gt to the [YourAppName].HttpApi.Host.csproj file</FigureCaption>
      </Figure>
      <p>26. Open a command prompt in the root folder of your project and add all your changes to the git repo</p>
      <pre><code class="language-html">git add .</code></pre>

      <p>27. Commit your changes</p>
      <pre><code class="language-html">git commit -m OutOfProcess</code></pre>

      <p>28. Push everything to the GitHub repo in the cloud</p>
      <pre><code class="language-html">git push</code></pre>

      <p>29. As Continous Integration is enabled in the Build pipeline, this should trigger a new Build</p>
      <p>30. When the Build has succeeded, a new Release should be triggered</p>

      <p>31. Navigate to the URL of the Web App. It's possible you see the error below</p>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/an_error_when_starting_the_application.jpg" />
        <FigureCaption>An error occurred while starting the application.</FigureCaption>
      </Figure>

      <p>32. Open the Debug Console in the Kudu window [YourAppNameapi.scm.azurewebsites.net]</p>
      <pre><code class="language-html">https://[YourAppName]api.scm.azurewebsites.net</code></pre>

      <p>33. Try to invoke an error description by entering following command in the wwwroot folder of the Debug Console</p>
      <pre><code class="language-html">dotnet [YourAppName].HttpApi.Host.dll</code></pre>

      <p>34. If you receive no Error description. Go to Program.cs from the [YourAppName].HttpApi.Host project and comment out the if debug statements</p>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/comment_out_if_debug_statements_in_ProgramCs.jpg" />
        <FigureCaption>An error occurred while starting the application.</FigureCaption>
      </Figure>

      <p>35. Add, Commit and Push all your changes to your GitHub repo</p>
      <pre><code class="language-html">git add .</code></pre>
      <pre><code class="language-html">git commit -m OutOfProcess</code></pre>
      <pre><code class="language-html">git push</code></pre>

      <p>36. Wait until the new Build and new Release have been finished</p>
      <p>37. Navigate to the URL of the Web App. You should see the same error as in 31</p>

       <p>38. Open the Debug Console in the Kudu window [YourAppNameapi.scm.azurewebsites.net]</p>
      <pre><code class="language-html">https://[YourAppName]api.scm.azurewebsites.net</code></pre>

      <p>39. Enter the command below in the wwwroot folder of the Debug Console. Now you should see an error description</p>
      <pre><code class="language-html">dotnet [YourAppName].HttpApi.Host.dll</code></pre>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/could_not_find_file_tempkey.rsa.jpg" />
        <FigureCaption>System.IO.FileNotFoundException: Could not find file 'D:\home\site\wwwroot\tempkey.rsa</FigureCaption>
      </Figure>

      <p>40. Add the section below to the [YourAppName].HttpApi.Host.proj file</p>
<pre><code class="languag-html">
  &lt;ItemGroup&gt
    &lt;None Update="tempkey.rsa"&gt
      &lt;CopyToOutputDirectory&gtPreserveNewest&lt;/CopyToOutputDirectory&gt
    &lt;/None&gt
  &lt;/ItemGroup&gt
</code></pre>

      <p>41. Add, Commit and Push all your changes to your GitHub repo</p>
      <pre><code class="language-html">git add .</code></pre>
      <pre><code class="language-html">git commit -m OutOfProcess</code></pre>
      <pre><code class="language-html">git push</code></pre>
      <p>42. Wait until the new Build and new Release have been finished</p>
      <p>43. Navigate to the URL of the Web App to see if the error is gone</p>
      <p>44. It's possible that you get the error This page isnâ€™t working</p>

      <p>45. Open the Debug Console in the Kudu window [YourAppNameapi.scm.azurewebsites.net]</p>
      <pre><code class="language-html">https://[YourAppName]api.scm.azurewebsites.net</code></pre>

      <p>46. Enter the command below in the wwwroot folder of the Debug Console to get a more specific error description</p>
      <pre><code class="language-html">dotnet [YourAppName].HttpApi.Host.dll</code></pre>
      <p>47. Probably you receive the error description below</p>
      <Figure Size="FigureSize.None">
        <FigureImage Source="images/client_not_allowed_to_access_server.jpg" />
        <FigureCaption>Cannot open server 'abpioazuredevopsserver' requested by the login. Client with IP address 'x.x.x.x' is not allowed to access the server.</FigureCaption>
      </Figure>
      <p>48. Go to the Azure Portal and select your [YourAppName]server</p>
      <p>49. Click on the Firewalls and virtual networks menu</p>
      <p>50. Select Yes in toggle `Allow Azure services and resources to access this server`</p>
      <p>51. Click the Save button and close window when the Firewall rules have been updated</p>
      <p>52. Navigate to the URL of the Web App and Refresh the page to see if you still get an error</p>
      <p>53. If all goes well your [YourAppName].HttpApi.Host project should be up and running</p>
<Figure Size="FigureSize.None">
        <FigureImage Source="images/swagger_page_served_by_web_app_on_azure.jpg" />
        <FigureCaption>Swagger page served by your Web App running on Azure</FigureCaption>
      </Figure>




    </Part>
</PartTemplate>